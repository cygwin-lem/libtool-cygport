With gcc4 providing shared libs, it should now perfectly legitimate to 
add any of these libs to the libtool link command.  Right now, though, 
libtool can't find these libraries because $sys_lib_search_path_spec is 
hard-coded to ignore it, and libtool will refuse to link against any 
library it can't find (even though the linker itself can).

Instead, this patch simply adds /usr/lib/w32api to the default 
gcc-specific search path.  The m4_if() makes sure that w32api is added 
only once, as is done with Darwin a few lines later.

	* libltdl/m4/libtool.m4 (_LT_SYS_DYNAMIC_LINKER) [cygwin*]:
	Add w32api to sys_lib_search_path_spec without overriding gcc's
	own search path.

--- origsrc/libtool-2.2.6/libltdl/m4/libtool.m4	2008-09-05 06:54:41.000000000 -0500
+++ src/libtool-2.2.6/libltdl/m4/libtool.m4	2009-03-25 16:25:45.239000000 -0500
@@ -2228,7 +2228,8 @@ cygwin* | mingw* | pw32* | cegcc*)
     cygwin*)
       # Cygwin DLLs use 'cyg' prefix rather than 'lib'
       soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'
-      sys_lib_search_path_spec="/usr/lib /lib/w32api /lib /usr/local/lib"
+m4_if([$1], [],[
+      sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"])
       ;;
     mingw* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
